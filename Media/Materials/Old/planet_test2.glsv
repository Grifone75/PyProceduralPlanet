
			//#version 130
			#extension GL_EXT_texture_array : enable
              
            vec3 cube2sphere(vec3 p)
            {
                float x2,y2,z2,xs,ys,zs;
                x2 = p.x*p.x;
                y2 = p.y*p.y;
                z2 = p.z*p.z;
                // sphericize
                xs = p.x * sqrt(1.0-(y2*0.5)-(z2*0.5)+(y2*z2/3.0));
                ys = p.y * sqrt(1.0-(z2*0.5)-(x2*0.5)+(z2*x2/3.0));
                zs = p.z * sqrt(1.0-(x2*0.5)-(y2*0.5)+(x2*y2/3.0));
                return vec3(xs,ys,zs);
            }
            

            uniform mat4 u_model;
			uniform mat4 u_view;
			uniform mat4 u_normal;
			uniform mat4 u_proj;
            varying vec3 posit,normal_i, posobj;
            attribute vec3 position;
            attribute vec3 texcoord;
			attribute float nodescale;
            varying vec3 texturecoord;
			varying float polar, fnodescale;
			uniform sampler2D surfacecolor;
			uniform sampler2DArray heightmap;
            uniform float planet_height, planet_radius,sea_level;

            void main() 
            {
                //normal = gl_NormalMatrix * gl_Normal;
                //gl_Position = gl_ModelViewProjectionMatrix * vec4(position,1.0);
                float x;
                float y;
                float z;
                float x2,y2,z2;
                float n,n2,n4,n8,pds,pdt;
                vec2 ds,dt;
                vec3 ps,posnew;
				


				n = texture2DArray(heightmap,texcoord).w;

				
                ps = cube2sphere(position);
				//ps = position;
   
				polar = (ps.y*ps.y);
				//polar = n;
                //calcolate normal based on sphere
				//normal_i = gl_NormalMatrix * normalize(ps);
				normal_i =  normalize(ps);
				
                posnew = ps*(1+planet_height*n/planet_radius);
                
				posobj = ps;
				fnodescale = nodescale;
                texturecoord = texcoord;
				posit =  u_view*u_model * vec4(posnew,1.0);
                gl_Position = u_proj  *u_view*u_model* vec4(posnew,1.0);
				
                

            }